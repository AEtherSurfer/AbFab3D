<?xml version="1.0" standalone="yes"?>

<project basedir="." default="build" name="gpu">
    <import file="build_common.xml"/>

    <description>gpu</description>

    <property name="version" value="1.0.0"/>
    <property name="service" value="shapejsRT" />
    <property name="src.dir" value="${basedir}/src"/>
    <property name="apps.dir" value="${basedir}/apps"/>
    <property name="apps.common.dir" value="../common"/>
    <property name="shapejs.dir" value="../shapejs"/>
    <property name="release.dir" value="${basedir}/release"/>
    <property name="test.dir" value="${basedir}/test/junit"/>
    <property name="abfab3d.classes.dir" value="../../classes"/>
    <property name="classes.dir" value="${basedir}/classes"/>
    <property name="test.classes.dir" value="${classes.dir}/test" />
    <property name="jar.dir" value="${basedir}/jars"/>
    <property name="war.dir" value="${basedir}/wars"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="abfab3d.lib.dir" value="../../lib"/>
    <property name="abfab3d.jars.dir" value="../../jars"/>
    <property name="manifest.dir" value="${basedir}/manifest"/>
    <property name="javadocs.dir" value="${basedir}/docs/javadoc"/>
    <property name="app.common.dir" value="../common"/>
    <property name="xj3d.dir" value="../../../../../xj3d/code/trunk"/>
    <property name="av3d.dir" value="../../j3d.org/aviatrix3d-2/aviatrix3d"/>

    <property name="deploy.webserver.dir" value="/var/www/html/creators/creators"/>
    <property name="deploy.appserver.dir" value="/InstalledPrograms/jetty-distribution-8.1.3.v20120416"/>

    <property name="entrypoint" value="volumesculptor.VolumeSculptor"/>

    <property name="runarg0" value="-Xmx8800m"/>
    <property name="runarg1" value="-Djava.library.path=&quot;./natives/${os.name}/${os.arch}&quot;" />
    <property name="jvmrunargs" value="${runarg0} ${runarg1}"/>

    <target name="build"
            description="Complete clean, setup, compilation, run"
            depends="clean,init,kernels,compile,jar"/>

    <!-- Create destination directories -->
    <target name="init" description="Create destination directories">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${javadocs.dir}"/>
    </target>

    <target name="compileCommon">
        <ant antfile="${apps.common.dir}/build.xml" target="build" inheritall="false"/>
    </target>

    <target name="compileTest" depends="init" description="Compile all Test source files">
        <mkdir dir="${test.classes.dir}" />

        <compilejava destdir="${test.classes.dir}" srcdir="${test.dir}" package="gpu" jars="**/*.jar" >
            <classpath-elements>
                <pathelement path="${classes.dir}"/>
                <pathelement path="${app.common.dir}/classes"/>
                <pathelement path="${abfab3d.classes.dir}"/>
                <fileset dir="${abfab3d.lib.dir}"/>
            </classpath-elements>
        </compilejava>
    </target>

    <target name="compile" depends="init" description="Compile all Java source files">
        <compilejava package="gpu"
                     jars="jocl.jar commons-pool2-2.3.jar gluegen-rt.jar" >
            <classpath-elements>
                <pathelement path="${app.common.dir}/classes"/>
                <pathelement path="${abfab3d.classes.dir}"/>
                <fileset dir="${abfab3d.lib.dir}"/>
            </classpath-elements>
        </compilejava>
        <compilejava package="program" jars="" >
            <classpath-elements>
                <pathelement path="${app.common.dir}/classes"/>
                <pathelement path="${abfab3d.classes.dir}"/>
                <fileset dir="${abfab3d.lib.dir}"/>
            </classpath-elements>
        </compilejava>
        <compilejava package="shapejs" jars="js.jar" >
            <classpath-elements>
                <pathelement path="${app.common.dir}/classes"/>
                <pathelement path="${abfab3d.classes.dir}"/>
                <fileset dir="${abfab3d.lib.dir}"/>
            </classpath-elements>
        </compilejava>
        <compilejava package="datasources" jars="js.jar" >
            <classpath-elements>
                <pathelement path="${app.common.dir}/classes"/>
                <pathelement path="${abfab3d.classes.dir}"/>
                <fileset dir="${abfab3d.lib.dir}"/>
            </classpath-elements>
        </compilejava>
        <compilejava package="transforms" jars="js.jar" >
            <classpath-elements>
                <pathelement path="${app.common.dir}/classes"/>
                <pathelement path="${abfab3d.classes.dir}"/>
                <fileset dir="${abfab3d.lib.dir}"/>
            </classpath-elements>
        </compilejava>
        <compilejava package="render" jars="" >
            <classpath-elements>
                <pathelement path="${app.common.dir}/classes"/>
                <pathelement path="${abfab3d.classes.dir}"/>
                <fileset dir="${abfab3d.lib.dir}"/>
            </classpath-elements>
        </compilejava>
        <compilejava package="viewer" jars="" >
            <classpath-elements>
                <pathelement path="${app.common.dir}/classes"/>
                <pathelement path="${abfab3d.classes.dir}"/>
                <fileset dir="${abfab3d.lib.dir}"/>
            </classpath-elements>
        </compilejava>
        <compilejava package="http" jars="" >
            <classpath-elements>
                <pathelement path="${app.common.dir}/classes"/>
                <pathelement path="${abfab3d.classes.dir}"/>
                <fileset dir="${abfab3d.lib.dir}"/>
            </classpath-elements>
        </compilejava>
        <compilejava package="prototype" jars="" >
            <classpath-elements>
                <pathelement path="${app.common.dir}/classes"/>
                <pathelement path="${abfab3d.classes.dir}"/>
                <fileset dir="${abfab3d.lib.dir}"/>
            </classpath-elements>
        </compilejava>
    </target>

    <target name="kernels" >
        <delete dir="/tmp/openCL_cache" />
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}/opencl"/>
        </copy>
    </target>
    <target name="jar" depends="compile">
        <createjar name="shapejsRT"
            version="${version}"
            manifest="shapejsRT/shapejsRT.mf"

            includes="*/**
            "
        />		
    </target>
    <target name="war" depends="jar">
        <createwar name="shapejsRT"
                   includes="web/html/*"

                   jars="shapejsRT_${version}.jar"
                >
            <zipfileset-elements>
                <zipfileset dir="${lib.dir}" prefix="WEB-INF/lib"
                            includes="*"
                            excludes="servlet*.jar"
                        />
                <!--                            excludes="servlet*.jar libjpeg_turbo_v1.4.0.jar" -->
                <zipfileset dir="${abfab3d.lib.dir}" prefix="WEB-INF/lib"
                            includes="*"
                            excludes=""
                        />
                <zipfileset dir="${abfab3d.jars.dir}" prefix="WEB-INF/lib"
                            includes="*"
                            excludes=""
                        />
<!--
                <zipfileset dir="natives/Windows 8.1/amd64" prefix="WEB-INF/lib"
                            includes="*/**"
                            excludes="*.dll"
                        />
-->
                <zipfileset dir="natives/linux/amd64" prefix="WEB-INF/lib"
                            includes="*/**"
                            excludes="*.dll"
                        />

            </zipfileset-elements>
        </createwar>
    </target>

    <target name="deploy" depends="war">
        <mkdir dir="${deploy.webserver.dir}/${service}"/>

        <copy todir="${deploy.webserver.dir}/${service}" failonerror="false">
            <fileset dir="${src.dir}/html"/>
        </copy>
<!--        <createjetty service="${service}" version="${version}" appserverdir="${deploy.appserver.dir}" commondir="${shapeways.common.dir}"/> -->
        <copy todir="${deploy.appserver.dir}/webapps">
            <fileset dir="${war.dir}"/>
        </copy>
    </target>
    <target name="deployWeb" depends="war">
        <copy todir="${deploy.webserver.dir}/${service}" failonerror="false">
            <fileset dir="${src.dir}/html"/>
        </copy>
    </target>

    <target name="test" depends="compileTest,kernels">
        <junit dir="${basedir}" printsummary="yes" haltonerror="no" haltonfailure="yes" fork="yes" showoutput="true">
            <jvmarg line="${jvmrunargs}"/>
            <formatter type="plain" usefile="false"/>
            <batchtest fork="yes" >
                <fileset dir="${test.dir}">
                    <include name="**/Test*.java"/>
                    <exclude name="**/*Performance*.java"/>
                    <exclude name="**/*Suite*.java"/>
                </fileset>
            </batchtest>

            <classpath>
                <pathelement path="${abfab3d.classes.dir}" />
                <pathelement path="${classes.dir}" />
                <pathelement path="${test.classes.dir}" />
                <fileset dir="${lib.dir}" includes="**/*.jar" />
                <fileset dir="${abfab3d.lib.dir}" includes="**/*.jar" />
            </classpath>
        </junit>
    </target>
    <target name="testSpecific" depends="compileTest">
        <echo message="running testSpecific ${test} jvmargs: ${jvmrunargs}" />
        <junit printsummary="yes" haltonerror="no" haltonfailure="yes" fork="yes" showoutput="yes">
            <jvmarg line="${jvmrunargs}"/>
            <formatter type="plain" usefile="false"/>
            <batchtest fork="yes" >
                <fileset dir="${test.dir}">
                    <include name="**/${test}.java"/>
                </fileset>
            </batchtest>

            <classpath>
                <pathelement path="${abfab3d.classes.dir}" />
                <pathelement path="${classes.dir}" />
                <pathelement path="${test.classes.dir}" />
                <fileset dir="${lib.dir}" includes="**/*.jar" />
                <fileset dir="${abfab3d.lib.dir}" includes="**/*.jar" />
            </classpath>
        </junit>
    </target>


    <target name="run" depends="compile" description="Run the application">
        <echo message="jvmargs: ${jvmrunargs}"/>
        <java classname="volumesculptor.ui.Editor" fork="true">
            <jvmarg line="${jvmrunargs}"/>
            <classpath>
                <pathelement path="${classes.dir}"/>
                <fileset dir="${lib.dir}" includes="**/*.jar" excludes=""/>
                <pathelement path="${abfab3d.classes.dir}"/>
                <fileset dir="${abfab3d.lib.dir}"/>
                <pathelement path="${app.common.dir}/classes"/>
                <!--                <fileset dir="natives/${os.name}/${os.arch}" includes="**/*.jar" /> -->
            </classpath>
        </java>
    </target>

    <target name="runViewer" depends="compile" description="Run the viewer">
        <echo message="jvmargs: ${jvmrunargs}"/>
        <java classname="viewer.VolumeViewer" fork="true">
            <jvmarg line="${jvmrunargs}"/>
            <arg value="-version"/><arg value="opcode_v2_dist"/>
            <arg value="scripts/gyrosphere.js"/>
            <!--<arg value="${script}"/>-->
            <classpath>
                <pathelement path="${classes.dir}"/>
                <fileset dir="${lib.dir}" includes="**/*.jar" excludes=""/>
                <pathelement path="${abfab3d.classes.dir}"/>
                <fileset dir="${abfab3d.lib.dir}"/>
                <pathelement path="${app.common.dir}/classes"/>
                <fileset dir="natives/${os.name}/${os.arch}" includes="**/*.jar" />
            </classpath>
        </java>
    </target>

    <target name="runProto" depends="compile" description="Run the Proto for test">
        <echo message="jvmargs: ${jvmrunargs}"/>
        <java classname="prototype.Prototype" fork="true">
            <jvmarg line="${jvmrunargs}"/>
            <classpath>
                <pathelement path="${classes.dir}"/>
                <fileset dir="${lib.dir}" includes="**/*.jar" excludes=""/>
                <pathelement path="${abfab3d.classes.dir}"/>
                <fileset dir="${abfab3d.lib.dir}"/>
                <pathelement path="${app.common.dir}/classes"/>
                <fileset dir="natives/${os.name}/${os.arch}" includes="**/*.jar" />
            </classpath>
        </java>
    </target>
    <target name="runOpcode" depends="compile" description="Run the Opcode maker test">
      <echo message="jvmargs: ${jvmrunargs}"/>
        <java classname="prototype.OpcodeMaker" fork="true">
            <jvmarg line="${jvmrunargs}"/>
            <classpath>
                <pathelement path="${classes.dir}"/>
                <fileset dir="${lib.dir}" includes="**/*.jar" excludes=""/>
                <pathelement path="${abfab3d.classes.dir}"/>
                <fileset dir="${abfab3d.lib.dir}"/>
                <pathelement path="${app.common.dir}/classes"/>
                <fileset dir="natives/${os.name}/${os.arch}" includes="**/*.jar" />
            </classpath>
        </java>
    </target>

    <target name="runCLInfo" depends="compile" description="Run CLInfo">
        <echo message="jvmargs: ${jvmrunargs}"/>
        <java classname="prototype.CLInfo" fork="true">
            <jvmarg line="${jvmrunargs}"/>
            <classpath>
                <pathelement path="${classes.dir}"/>
                <fileset dir="${lib.dir}" includes="**/*.jar" excludes=""/>
                <pathelement path="${abfab3d.classes.dir}"/>
                <fileset dir="${abfab3d.lib.dir}"/>
                <pathelement path="${app.common.dir}/classes"/>
                <fileset dir="natives/${os.name}/${os.arch}" includes="**/*.jar" />
            </classpath>
        </java>
    </target>

    <target name="runShell" depends="compile" description="Run the application">
        <echo message="jvmargs: ${jvmrunargs}"/>
        <java classname="volumesculptor.shell.Main" fork="true">
            <jvmarg line="${jvmrunargs}"/>
            <arg value="sphere.js" />
            <classpath>
                <pathelement path="${classes.dir}"/>
                <fileset dir="${lib.dir}" includes="**/*.jar" excludes=""/>
                <pathelement path="${abfab3d.classes.dir}"/>
                <fileset dir="${abfab3d.lib.dir}"/>
                <pathelement path="${app.common.dir}/classes"/>
                <!--                <fileset dir="natives/${os.name}/${os.arch}" includes="**/*.jar" /> -->
            </classpath>
        </java>
    </target>

    <target name="runStandalone" depends="" description="Run the application">
        <echo message="jvmargs: ${jvmrunargs}"/>
        <java classname="volumesculptor.ui.Editor" fork="true">
            <jvmarg line="${jvmrunargs}"/>
            <classpath>
                <pathelement path="${classes.dir}"/>
                <fileset dir="${lib.dir}" includes="**/*.jar" excludes=""/>
                <pathelement path="${abfab3d.classes.dir}"/>
                <fileset dir="${abfab3d.lib.dir}"/>
                <pathelement path="${app.common.dir}/classes"/>
                <!--                <fileset dir="natives/${os.name}/${os.arch}" includes="**/*.jar" /> -->
            </classpath>
        </java>
    </target>

    <target name="javadoc" description="Generates javadoc" depends="compile">
        <echo message="Generating javadoc..."/>
        <javadoc sourcepath="${src.dir}/java"
                 destdir="${javadocs.dir}"
                 packagenames="*"
                 version="true"
                 author="yes">
        </javadoc>
    </target>

    <target name="clean" description="Deletes all the generated artifacts.">
        <delete dir="${javadocs.dir}"/>
        <delete dir="${classes.dir}"/>
        <delete file="src/java/volumesculptor/ui/Editor.java" />
    </target>

</project>

